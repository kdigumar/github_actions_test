---
name: Build and Deploy
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      app_name:
        required: true
        type: string
    secrets:
      SYSTEST_IPS:
        required: true
      EC2_USERNAME:
        required: true
      EC2_KEY:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ inputs.APP_NAME }}
      ENV: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Build with Maven
        run: |
          echo "Building project..."
          mvn clean package
      - name: List target directory before rename
        run: |
          echo "Contents of ./target before rename:"
          ls -lh ./target
      - name: Debug APP_NAME value
        run: |
          echo "APP_NAME is: '${APP_NAME}'"
      - name: Rename JAR to $APP_NAME.jar
        run: >
          JAR_FILE=$(find ./target -type f -name "*.jar" ! -name "*.original" | head
          -n 1)


          if [[ -z "$JAR_FILE" ]]; then
            echo "No JAR file found in ./target!"
            exit 1
          fi


          echo "Found JAR file: $JAR_FILE"


          TARGET_JAR="./target/${APP_NAME}.jar"

          echo "Copying to: $TARGET_JAR"


          cp "$JAR_FILE" "$TARGET_JAR"
      - name: List target directory after rename
        run: |
          echo "Contents of ./target after rename:"
          ls -lh ./target

      - name: Deploy JAR to EC2 instances
        run: |
          echo "$EC2_KEY" > private_key.pem
          chmod 600 private_key.pem

          IFS=',' read -ra HOSTS <<< "$SYSTEST_IPS"

          for HOST in "${HOSTS[@]}"; do
            echo "Deploying to $HOST"
            scp -o StrictHostKeyChecking=no -i private_key.pem "./target/${APP_NAME}.jar" "${EC2_USERNAME}@${HOST}:/opt/apps/${APP_NAME}.jar"
          done
        env:
          SYSTEST_IPS: ${{ secrets.SYSTEST_IPS }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
